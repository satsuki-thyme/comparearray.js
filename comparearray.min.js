<<<<<<< HEAD
function comparearray(n,t){let e={invalidArgument:"引数が不正です。"},r={doubleOperator:async(n,t)=>[await n(t[0]),await n(t[1])],dimensionBreaker:n=>{function t(n,r){return new Promise((i,o)=>{if(n instanceof Array||n instanceof Object){let a=[];for(let e in n)a.push(t(n[e],r.concat(e.toString())));Promise.all(a).then(()=>{i(e)}).catch(n=>{o(n)})}else i(e.push({content:n,passingPoint:r}))})}let e=[];return t(n,[],[])},structureAnalizer:n=>{let t=n.map(n=>Math.max(...n.passingPoint.map(n=>n.length)));for(let e in n){for(let r in n[e].passingPoint)n[e].passingPoint[r]=`${"0".repeat(t[r])}${n[e].passingPoint[r]}`.slice(-t[r]);n[e].structure=n[e].passingPoint.slice(0,t.length-1).join("")}let e=Math.max(...n.map(n=>n.passingPoint[0].length));for(let t in n)n[t].dna=`${n[t].passingPoint}${"0".repeat(e)}`.slice(0,e);return n.sort((n,t)=>n.dna-t.dna)},arrayComparator:n=>{for(let t in n[0]){if(n[0][t].structure!==n[1][t].structure)return 2;if(n[0][t].content instanceof Object){if(n[0][t].content.length!==n[1][t].content.length)return 2;for(let e in n[0][t].content)if(void 0===n[1][t].content[e])return 2}}for(let t in n[0]){if(!(n[0][t].content instanceof Object||n[0][t].content===n[1][t].content))return 1;for(let e in n[0][t].content)if(n[0][t].content[e]!==n[1][t].content[e])return 1}return 0}};return(n instanceof Array||n instanceof Object)&&(t instanceof Array||t instanceof Object)?r.doubleOperator(r.dimensionBreaker,[n,t]).then(n=>r.doubleOperator(r.structureAnalizer,[n[0],n[1]])).then(n=>r.arrayComparator(n)):new Promise(n=>{console.log(e.invalidArgument),n(!1)})}
=======
function comparearray(n,t){let e={invalidArgument:"引数が不正です。"},r={operateDouble:async(n,t)=>[await n(t[0]),await n(t[1])],breakDimension:n=>{function t(n,r){return new Promise((i,o)=>{if(n instanceof Array||n instanceof Object){let a=[];for(let e in n)a.push(t(n[e],r.concat(e.toString())));Promise.all(a).then(()=>{i(e)}).catch(n=>{o(n)})}else i(e.push({content:n,passingPoint:r}))})}let e=[];return t(n,[],[])},analyzeStructure:n=>{let t=[];for(let e in n)for(let r in n[e].passingPoint)void 0===t[r]&&(t[r]=0),t[r]=Math.max(t[r],n[e].passingPoint[r].length);for(let e in n){for(let r in n[e].passingPoint)n[e].passingPoint[r]=`${"0".repeat(t[r]-1)}${n[e].passingPoint[r]}`.slice(-t[r]);n[e].structure=n[e].passingPoint.slice(0,t.length-1).join("")}let e=0;for(let t in n)e=Math.max(e,n[t].passingPoint[0].length);for(let t in n)n[t].dna=`${n[t].passingPoint}${"0".repeat(e-1)}`.slice(0,e);return n.sort((n,t)=>n.dna-t.dna)},compareArray:n=>{for(let t in n[0]){if(n[0][t].structure!==n[1][t].structure)return 2;if(n[0][t].content instanceof Object){if(n[0][t].content.length!==n[1][t].content.length)return 2;for(let e in n[0][t].content)if(void 0===n[1][t].content[e])return 2}}for(let t in n[0]){if(!(n[0][t].content instanceof Object||n[0][t].content===n[1][t].content))return 1;for(let e in n[0][t].content)if(n[0][t].content[e]!==n[1][t].content[e])return 1}return 0}};return(n instanceof Array||n instanceof Object)&&(t instanceof Array||t instanceof Object)?r.operateDouble(r.breakDimension,[n,t]).then(n=>r.operateDouble(r.analyzeStructure,[n[0],n[1]])).then(n=>r.compareArray(n)):new Promise(n=>{console.log(e.invalidArgument),n(!1)})}
>>>>>>> 9e3d0be9893ac4b40c0c3e053cc751c6b4767270
