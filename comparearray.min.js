function comparearray(t,n){let e={operateDouble:async(t,n)=>[await t(n[0]),await t(n[1])],breakDimension:t=>{function n(t,r){return new Promise((o,i)=>{if(t instanceof Array){let a=[];for(let e in t)a.push(n(t[e],r.concat(e.toString())));Promise.all(a).then(()=>{o(e)}).catch(t=>{i(t)})}else o(e.push({content:t,passingPoint:r}))})}let e=[];return n(t,[])},analyzeStructure:t=>{let n=[];for(let e in t)for(let r in t[e].passingPoint)void 0===n[r]&&(n[r]=0),n[r]=Math.max(n[r],t[e].passingPoint[r].length);for(let e in t){for(let r in t[e].passingPoint)t[e].passingPoint[r]=`${"0".repeat(n[r]-1)}${t[e].passingPoint[r]}`.slice(-n[r]);t[e].structure=t[e].passingPoint.slice(0,n.length-1).join("")}let e=0;for(let n in t)e=Math.max(e,t[n].passingPoint[0].length);for(let n in t)t[n].dna=`${t[n].passingPoint}${"0".repeat(e-1)}`.slice(0,e);return t.sort((t,n)=>t.dna-n.dna)},compareArray:t=>{for(let n in t[0]){if(t[0][n].content.structure!==t[1][n].content.structure)return 2;if(t[0][n].content instanceof Object){if(t[0][n].content.length!==t[1][n].content.length)return 2;for(let e in t[0][n].content)if(void 0===t[1][n].content[e])return 2}}for(let n in t[0]){if(!(t[0][n].content instanceof Object||t[0][n].content===t[1][n].content))return 1;for(let e in t[0][n].content)if(t[0][n].content[e]!==t[1][n].content[e])return 1}return 0}};return e.operateDouble(e.breakDimension,[t,n]).then(t=>e.operateDouble(e.analyzeStructure,[t[0],t[1]])).then(t=>e.compareArray(t))}